---
# tasks file for verify-tower-setup
- name: set whether to use http or https
  set_fact:
    api_url_prefix: "{{ 'https' if tower_ui_use_ssl else 'http' }}"

- name: get tower api version
  uri:
    url: "{{ api_url_prefix}}://localhost/api/"
    validate_certs: false
  register: get_api_version

- name: set a fact defining the current api version
  set_fact:
    api_version: "{{ get_api_version.json.current_version }}"

- name: "get api listing"
  uri:
    url: "{{ api_url_prefix }}://localhost{{ api_version }}"
    validate_certs: false
  register: api_groups

- name: set fact for URL to get Tower status
  set_fact:
    api_ping_uri: "{{ api_groups.json.ping }}"

- name: get tower status
  uri:
    url: "{{ api_url_prefix}}://localhost/{{api_ping_uri}}"
    validate_certs: false
  register: tower_status

- name: Check HA status
  fail: msg=" HA status on {{ ansible_host }} is not True"
  when: tower_status.json.ha != true

- name: assign inventory tower node count as a fact
  set_fact:
    tower_node_count: "{{ groups['tower']|length }}"

- name: assign api tower node count as a fact
  set_fact:
    api_tower_node_count: "{{tower_status.json.instances|length}}"

- name: Ensure number of instances listed matches number of Tower nodes
  fail: msg="Number of Nodes in Cluster on {{ ansible_host }} does not match Tower node count in the inventory"
  when: api_tower_node_count != tower_node_count


#- name: set api status results a fact
#- name: "verify that ha is enabled"
#- name: "verify that number of hosts matches requirements of RabbitMQ cluster (3,5,7...)"
#- name: "verify that the postgres dhb is reachable"
#- name: "verify that rabbitmq status is working"
