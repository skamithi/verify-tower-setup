---
# tasks file for verify-tower-setup
- include: initialize_api_conn.yml
  tags:
    - check_api_node_count
    - check_ha_status


- name: Check HA status
  fail: msg=" HA status on {{ ansible_host }} is not True"
  when: tower_status.json.ha != true
  tags:
    - check_ha_status

- name: assign inventory tower node count as a fact
  set_fact:
    tower_node_count: "{{ groups['tower']|length }}"
  tags:
    - check_rabbitmq
    - check_api_node_count

- name: assign api tower node count as a fact
  set_fact:
    api_tower_node_count: "{{tower_status.json.instances|length}}"
  tags:
    - check_api_node_count

- name: Ensure number of instances listed matches number of Tower nodes
  fail: msg="Number of Nodes in Cluster on {{ ansible_host }} does not match Tower node count in the inventory"
  when: api_tower_node_count != tower_node_count
  tags:
    - check_api_node_count

- name: check that tower node can reach postgres port
  wait_for:
    port: "{{ pg_port}}"
    host: "{{ pg_host }}"
  tags:
    - check_db_conn

# Seems like tower sets the mgmt user to guest:guest. Hardcoding for now
- name: get rabbitmqctl cluster from the api
  uri:
    url: "http://localhost:15672/api/nodes/"
    method: GET
    user: "{{ rabbitmq_mgmt_user }}"
    password: "{{ rabbitmq_mgmt_user_password }}"
    force_basic_auth: yes
    status_code: 200
  register: rabbitmqctl_nodes
  tags: check_rabbitmq

- name: assign rabbitmq cluster node as a fact
  set_fact:
    rabbitmq_node_count: "{{ rabbitmqctl_nodes.json|length }}"
  tags: check_rabbitmq

- name: Check that the number of RabbitMQ nodes == Tower nodes in inventory
  fail: msg="{{ ansible_host }} is reporting RabbitMQ cluster node count is wrong. Use rabbitmqctl cluster_status to check"
  when: rabbitmq_node_count != tower_node_count
  tags: check_rabbitmq
